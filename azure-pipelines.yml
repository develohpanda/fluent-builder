trigger:
  - master

variables:
  packageName: '@develohpanda/fluent-builder'

stages:
- stage: Build
  jobs:
    - job: Build
      steps:
        - checkout: self
          clean: true

        - task: NodeTool@0
          inputs:
            versionSpec: '8.11.1'

        - script: yarn install
          displayName: 'Install packages'

        - script: yarn lint
          displayName: 'Lint'

        - script: yarn compile
          displayName: 'Compile'

        - script: yarn test:ci
          displayName: 'Run unit tests'

        - task: PublishTestResults@2
          condition: succeededOrFailed()
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/junit.xml'
            failTaskOnFailedTests: true

        - task: PublishCodeCoverageResults@1
          condition: succeededOrFailed()
          inputs:
            codeCoverageTool: 'Cobertura'
            summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/cobertura-coverage.xml'
            failIfCoverageEmpty: true

        - task: CopyFiles@2
          inputs:
            Contents: 'package.json'
            TargetFolder: 'artifact'

        - task: CopyFiles@2
          inputs:
            SourceFolder: 'dist/src'
            Contents: '**'
            TargetFolder: 'artifact/src'

        - task: CopyFiles@2
          inputs:
            SourceFolder: 'artifact'
            Contents: '**'
            TargetFolder: '$(Build.ArtifactStagingDirectory)'

        - task: PublishPipelineArtifact@0
          inputs:
            artifactName: 'drop'
            targetPath: '$(Build.ArtifactStagingDirectory)'

    - deployment: Publish
      displayName: Publish
      environment: 'npm'
      strategy:
        runOnce:
          deploy:
            steps:
            - bash: |
              "newVersion=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
              currentVersion=$(npm show $(packageName) version)
              
              echo \"##vso[task.setvariable variable=version;]$newVersion\"
              echo \"##vso[task.setvariable variable=currentVersion;]$currentVersion\"
              
              echo \"Package name: $(packageName)\"
              echo \"Current: $currentVersion\"
              echo \"New: $newVersion\""
              workingDirectory: '$(System.DefaultWorkingDirectory)/_MyFoodBag.myfoodbag.$(packageName)/drop'
              failOnStderr: true
              displayName: 'Pull package version'
